# Copyright (c) 2021 University System of Georgia and jupyterlab-gt-coar-theme contributors
# Distributed under the terms of the BSD-3-Clause License.

name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  # increment to reset all caches
  CACHE_EPOCH: 0
  # python cruft
  PYTHONIOENCODING: utf-8
  PYTHONUNBUFFERED: 1
  PIP_DISABLE_PIP_VERSION_CHECK: 1

defaults:
  run:
    shell: bash -l {0}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: setup (python)
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
          architecture: x64

      - name: setup (node)
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: cache (pip)
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: |
            ${{ env.CACHE_EPOCH }}-${{ runner.os }}-pip-${{ hashFiles('.github/pip-build.txt') }}
          restore-keys: |
            ${{ env.CACHE_EPOCH }}-${{ runner.os }}-pip-

      - name: cache (node)
        uses: actions/cache@v2
        id: cache-node-modules
        with:
          path: '**/node_modules'
          key:
            ${{ env.CACHE_EPOCH }}-${{ runner.os }}-node-build-${{
            hashFiles('yarn.lock', '.gitub/pip-build.txt') }}

      - name: cache (yarn)
        uses: actions/cache@v1
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        id: cache-yarn-packages
        with:
          path: .yarn-packages
          key:
            ${{ env.CACHE_EPOCH }}-yarn-${{ runner.os }}-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ env.CACHE_EPOCH }}-yarn-${{ runner.os }}-
            ${{ env.CACHE_EPOCH }}-yarn-

      - name: setup (pip)
        run: pip install -U pip wheel setuptools

      - name: setup (pip build)
        run: pip install -U -v -r .github/pip-build.txt

      - name: check (pip)
        run: |
          set -eux
          mkdir -p build/pip
          pip freeze | tee build/pip/dist.pip.freeze
          pip check

      - name: upload (pip freeze)
        uses: actions/upload-artifact@v2
        with:
          name: jupyterlab-gt-coar-theme ${{ github.run_number }} build pip freeze
          path: ./build/pip/

      - name: list
        run: doit list --all --status

      - name: lint
        run: doit -n4 lint || doit lint

      - name: status (after lint)
        run: doit list --all --status | sort
        if: always()

      - name: build
        run: doit -n4 hash_dist || doit hash_dist

      - name: status (after build)
        run: doit list --all --status | sort
        if: always()

      - name: upload (dist)
        uses: actions/upload-artifact@v2
        with:
          name: jupyterlab-gt-coar-theme ${{ github.run_number }} dist
          path: ./dist

  install:
    runs-on: ${{ matrix.os }}-latest
    needs: [build]
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu, macos, windows]
        python: ['3.6', '3.9']
        include:
          - python: '3.6'
            dist: '*.tar.gz'
          - python: '3.9'
            dist: '*.whl'
          - os: windows
            py_cmd: python
          - os: macos
            py_cmd: python3
          - os: ubuntu
            py_cmd: python
    steps:
      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
          architecture: 'x64'

      - uses: actions/download-artifact@v2
        with:
          name: jupyterlab-gt-coar-theme ${{ github.run_number }}
          path: ./dist

      - name: Install the prerequisites
        run: |
          ${{ matrix.py_cmd }} -m pip install pip wheel

      - name: Install the package
        run: |
          cd dist
          ${{ matrix.py_cmd }} -m pip install -vv ${{ matrix.dist }}

      - name: Validate environment
        run: |
          ${{ matrix.py_cmd }} -m pip freeze
          ${{ matrix.py_cmd }} -m pip check

      - name: Validate the install
        run: |
          jupyter labextension list
          jupyter labextension list 2>&1 | grep -ie "@gt-coar/jupyterlab-theme.*enabled.*ok" -
